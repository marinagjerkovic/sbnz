package sbnz.integracija;

import sbnz.integracija.siem_centar.facts.MaliciousIps;

rule "Login error on same machine"
	when
		$log1: Log(type == "Login", status == "Error", $machine1: machine, $time1: time, $type: type1)
		$log2: Log(type == "Login", status == "Error", machine.ip.equals($machine1.ip), !time.equals($time1))
	then
		System.out.println("Login error on same machine! \n\t" + $log1+ "\n\t" + $log2);
		insert(new Alarm($type1, null, $machine, $time1));
end

rule "90 days inactive login attempt"
	when 
		$log1: Log(type == "Login", status == "Ok")
	then
	
end

rule "Alarm"
	when
		$a: Alarm()
	then
		System.out.println("Alarm: " + $a);
end


rule "Error log"
	when
		$l: Log(status == LogStatus.ERROR)
	then
		System.out.println("ERROR log! " + $l);
		insert(new Alarm($l.getLogType(), $l.getUser(), $l.getMachine(), $l.getTime()))
end


rule "Login error with same user"
	when 
		$log1: Log(type == "Login", status == "Error", $user1: user, $type: type1, $time1: time)
		$log2: Log(type == "Login", status == "Error", user.username.equals($user1.username), $time2:time, !$time1.equals($time2))
	then 
		System.out.println("Login error for same user! \n\t" + $log1+ "\n\t" + $log2);
		insert(new Alarm($type1, $user1, null, $time2));
end

rule "15 login errors from same IP address in last 5 days"
	when
		$logList: ArrayList(size > 15) from collect (
            Log(Log.time.isAfter(LocalDateTime.now().minusDays(5))), type == "Login", status == "Error")
    then
    	int sameIp;
    	String ip = "";
    	for (Object obj : &logList ){
    		sameIP  = 1;
    		Log log = (Log)obj;
    		ip = log.getMachine().getIp();
    		for (Object obj : &logList ){
	    		Log log2 = (Log)obj;
	    		if(ip.equals(log2.getMachine().getIp()) && !log.getTime().equals(log2.getTime())){
	    			sameIp++;
	    		}
	    	}
	    	if(sameIp >= 15){
		    	System.out.println("Login errors more than 15 times from same ip addres in past 5 days!"+
		    		log);
				insert(new Alarm("attack", null, log.getMachine(), log.getTime()));
				break;
			}    	
	    }
end

rule "Login error for malicious ip"
	when 
		$maliciousIps: MaliciousIps()
		$log: Log($maliciousIps.getIps().contains(machine.ip))
	then
		System.out.println("log with malicious ip"+log);
		insert(new Alarm("malicious", null, $log.getMachine(), log.getTime()));
end		
    	

rule "More than 6 threats registered for the same machine in last 10 days"
	when 
		$logList: ArrayList(size > 6) from collect (
            Log(Log.time.isAfter(LocalDateTime.now().minusDays(10))), type == "AntivirusReport", status == LogStatus.VirusThreat)
	then
		int sameIp;
    	String ip = "";
    	for (Object obj : &logList ){
    		sameIp  = 0;
    		Log log = (Log)obj;
    		ip = log.getMachine().getIp();
    		for (Object obj : &logList ){
	    		Log log2 = (Log)obj;
	    		if(ip.equals(log2.getMachine().getIp())){
	    			sameIp++;
	    		}
	    	}
	    	sameIp--;
	    	if(sameIp >= 7){
		    	System.out.println("More than 6 threats registered in the last 10 days on the same ip address "+
		    		log);
				insert(new Alarm(log.getType(), null, log.getMachine(), log.getTime()));
				break;
			}    	
	    }
