package sbnz.integracija;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import sbnz.integracija.siem_center.facts.Log;
import sbnz.integracija.siem_center.facts.Alarm;
import sbnz.integracija.siem_center.facts.Machine;
import sbnz.integracija.siem_center.facts.Risk;
import sbnz.integracija.siem_center.facts.AlarmType;
import sbnz.integracija.siem_center.facts.LogStatus;
import sbnz.integracija.siem_center.facts.LogType;
import sbnz.integracija.siem_center.facts.User;

rule "Login error on same machine"
	when
		$machine: Machine();
		List( size >=2 ) from collect (
			Log(
				type.equals(LogType.Login), 
				status.equals(LogStatus.Error), 
				machine.getIp().equals($machine.getIp())
			)
		)
	then
		System.out.println("ALARM: Login error on same machine!");
		insert(new Alarm(AlarmType.Login, new User(), $machine, LocalDateTime.now()));
end

rule "Login error with same username"
	when 
		$user: User();
		List (size >=2 ) from collect(
			Log (
				type.equals(LogType.Login),
				status.equals(LogStatus.Error),
				user.getUsername().equals($user.getUsername())
			)
		)
	then 
		System.out.println("ALARM: Login error with same username!");
		insert(new Alarm(AlarmType.Login, $user, null, LocalDateTime.now()));
end

rule "Error log"
	when
		$l: Log(status.equals(LogStatus.Error))
	then
		System.out.println("ALARM: Error log!");
		insert(new Alarm(AlarmType.Error, $l.getUser(), $l.getMachine(), $l.getTime()));
end

rule "90 days inactive login attempt"
	when 
		$log: Log(
			type.equals(LogType.Login), 
			user.getLastActivity().isBefore(LocalDateTime.now().minusDays(90))
		)
	then
		System.out.println("ALARM: 90 days inactive user login attempt!");
		insert(new Alarm(AlarmType.Login, $log.getUser(), $log.getMachine(), $log.getTime()));
end

//info system
rule "15 login errors from same IP address in the last 5 days"
	when
		$machine: Machine();
		$list: List( size >=15 ) from collect (
			Log(
				type.equals(LogType.Login), 
				status.equals(LogStatus.Error), 
				time.isAfter(LocalDateTime.now().minusDays(5)),
				machine.getIp().equals($machine.getIp())
			)
		)
    then
		System.out.println("ALARM: " +$list.size()+" login errors from same IP address in the last 5 days!");
		insert(new Alarm(AlarmType.Login, new User(), $machine, LocalDateTime.now()));
end


//info system
rule "User logged in from two different IP addresses in less then 10 seconds"
	when
		$user: User()
		exists (Log(
					status.equals(LogStatus.Ok), 
					type.equals(LogType.Login), 
					user.getUsername().equals($user.getUsername()),
					$ip:machine.getIp(), 
					$time:time) 
				and
				Log(
					status.equals(LogStatus.Ok), 
					type.equals(LogType.Login), 
					user.getUsername().equals($user.getUsername()),
					!machine.getIp().equals($ip),
					Math.abs(time.getSecond()-$time.getSecond())<=10)
				)
	then
		System.out.println("ALARM: User logged in from two different IP addresses in less then 10 seconds!");
		insert(new Alarm(AlarmType.Login, $user, null, LocalDateTime.now()));
end

rule "Antivirus threat not eliminated within hour"
	when
		$machine: Machine()
		$log: Log(
				type.equals(LogType.VirusThreat), 
				machine.getIp().equals($machine.getIp()),
				time.isBefore(LocalDateTime.now().minusHours(1))
			)
		not ( 
			Log(
				type.equals(LogType.ThreatEliminated),
				status.equals(LogStatus.Ok),
				text.contains("reporting log id: "+$log.getId()),
				time.isBefore($log.getTime().plusHours(1))
			)
		)
	then
		System.out.println("ALARM: Antivirus threat not eliminated within hour on machine: " + $machine.getIp());
		insert(new Alarm(AlarmType.Antivirus, new User(), $machine, LocalDateTime.now()));
end

rule "User data changed from ip that had multiple login attempts in the last 90 seconds"
	when
		$machine: Machine()
		$loginLog: Log(
			type.equals(LogType.Login), 
			status.equals(LogStatus.Ok), 
			machine.getIp().equals($machine.getIp())
		)
		$infoChangedLog: Log(
			type.equals(LogType.Information), 
			status.equals(LogStatus.Ok), 
			text.contains("profile info changed"),
			user.getId() == $loginLog.getUser().getId(),
			machine.getIp().equals($machine.getIp()),
			time.isAfter($loginLog.getTime())
		)
		$count: Number (intValue >=5 ) from accumulate(
			Log (
				type.equals(LogType.Login),
				status.equals(LogStatus.Error),
				time.isAfter(LocalDateTime.now().minusSeconds(90)),
				machine.getIp().equals($machine.getIp()),
				$id:user.getId()
			),
			init(List<Integer> userIds = new ArrayList<Integer>();),
			action(
				if (!userIds.contains($id)){
					userIds.add($id);
				}		
			),
			reverse(
				if (userIds.contains($id)){
					userIds.remove($id);
				}
			),
			result(userIds.size())
		)
	then
		System.out.println("ALARM: User data changed from ip that had "+ $count +" login attempts in the last 90 seconds");
		insert(new Alarm(AlarmType.UserInfoEndangered, $loginLog.getUser(), $machine, LocalDateTime.now()));
end

rule "Seven or more threats from the same machine"
	when
		$machine: Machine()
		$count: Number( intValue >=7) from accumulate (
			Log(
				type.equals(LogType.VirusThreat), 
				machine.getIp().equals($machine.getIp())
			)
			over window:time(10d),
			init(int count = 0;),
			action(count=count+1;),
			reverse(count=count-1;),
			result(count)
		)
	then
		System.out.println("ALARM: "+$count+" threats from ip address: "+$machine.getIp()+"!");
		insert(new Alarm(AlarmType.Antivirus, new User(), $machine, LocalDateTime.now()));
end
	
rule "Malicious ip login attempt (or success)"
	when
		$log: Log(
			type.equals(LogType.Login), 
			status.equals(LogStatus.Ok) || status.equals(LogStatus.Error),
			machine.isMaliciousIp())
	then
		System.out.println("ALARM: Malicious ip login attempt (or success): "+$log.getMachine().getIp()+"!");
		insert(new Alarm(AlarmType.MaliciousIp, $log.getUser(), $log.getMachine(), LocalDateTime.now()));
end

rule "Log from malicious machine"
	when
		$log: Log(machine.isMaliciousIp())
	then
		System.out.println("ALARM: Log from malicious ip: "+$log.getMachine().getIp()+"!");
		insert(new Alarm(AlarmType.MaliciousIp, $log.getUser(), $log.getMachine(), LocalDateTime.now()));
end

/*check over window
rule "Add IP address to malicious ips"
	when
		$machine: Machine(!isMaliciousIp)
		List(size>=30) from collect (
			Log(
				type.equals(LogType.Login),
				status.equals(LogType.Error),
				machine.getIp().equals($machine.getIp())
			)
			over window:time(1d)
		)
	then
		addIptoMalicious($machine);
end
*/
rule "Alarm"
	when
		$a: Alarm()
	then
		System.out.println("Alarm: " + $a);
end

rule 